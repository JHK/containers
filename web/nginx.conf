daemon off;
error_log stderr debug;

events {
  worker_connections 1024;
}

http {
  access_log on;
  access_log /dev/stdout;

  ###KEEP_ALIVE### keepalive_timeout 0;
  ###KEEP_ALIVE### keepalive_requests 1000;

  include mime.types;

  lua_shared_dict prometheus_metrics 10M;
  lua_package_path "/usr/local/openresty/lualib/?.lua;;";

  init_by_lua_block {
    prometheus = require("prometheus").init("prometheus_metrics")

    metric_requests = prometheus:counter(
      "nginx_http_requests_total", "Number of HTTP requests", {"host", "status"})
    metric_latency = prometheus:histogram(
      "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
    metric_connections = prometheus:gauge(
      "nginx_http_connections", "Number of HTTP connections", {"state"})
  }

  log_by_lua_block {
    metric_requests:inc(1, {ngx.var.server_name, ngx.var.status})
    metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
  }

  init_worker_by_lua_block {
    prometheus:init_worker()
  }

  server {
    listen 8080;

    location /_system/alive {
      echo ALIVE;
    }

    location / {
      echo ###MESSAGE###;
    }

    location ###PATH_PREFIX###/message {
      echo ###MESSAGE###;
    }

    location ###PATH_PREFIX###/sleep {
      echo_sleep 0.2;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/sleep/1 {
      echo_sleep 1;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/sleep/5 {
      echo_sleep 5;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/sleep/max {
      echo_sleep ###SLEEP_MAX###;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/404 {
      echo_status 404;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/410 {
      echo_status 410;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/500 {
      echo_status 500;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/502 {
      echo_status 502;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/503 {
      echo_status 503;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/504 {
      echo_status 504;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/509 {
      echo_status 509;
      echo ###VERSION###;
    }

    location ###PATH_PREFIX###/reqdump {
      default_type 'text/plain';
      echo "REMOTE_ADDR";
      echo $remote_addr;
      echo "\r";

      echo "HEADERS";
      echo_duplicate 1 $echo_client_request_headers;
      echo "\r";

      echo "BODY";
      echo_read_request_body;
      echo $request_body;
    }

    location /metrics {
      content_by_lua_block {
        metric_connections:set(ngx.var.connections_reading, {"reading"})
        metric_connections:set(ngx.var.connections_waiting, {"waiting"})
        metric_connections:set(ngx.var.connections_writing, {"writing"})
        prometheus:collect()
      }
    }
  }
}
